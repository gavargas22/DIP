% Guillermo Vargas
% 2D Median Filter Operation
% March 5,2016

% This code will apply certain transformations to the image selected.

% First, we select the image that we want to analyze through a dialog
[FileName,PathName] = uigetfile('*', 'Select the image to apply transformation to.');
% Proceed now to open the file
original_file_id = fopen([PathName FileName], 'r', 'l');
% Obtain information about the file from the user through a dialog box.
image_data_prompt = {'Enter image row size:','Enter image column size:'};
dialog_title = 'Image Size Information';
num_lines = 1;
default_answer = {'400', '400'};
user_gathered_image_information = inputdlg(image_data_prompt, dialog_title, num_lines, default_answer);

% We store in matrix the obtained strings and convert them to numbers.
image_information = str2double(user_gathered_image_information(:)');
image_rows = image_information(1);
image_columns = image_information(2);
% I set a variable to the number of total items in the image for future
% use.
total_number_of_pixels = image_rows * image_columns;

% Use MATLAB to open the image file.
image_data = multibandread([PathName FileName], [image_rows image_columns, 1], 'float', 0, 'bsq', 'ieee-le');

% Gather information about the 2D filter that we will do.
filter_information_promt = {'Enter kernel row size:','Enter kernel column size:'};
filter_information_dialog_title = 'Kernel Size Information';
default_kernel_size = {'3', '3'};
user_gathered_kernel_information = inputdlg(filter_information_promt, filter_information_dialog_title, 1, default_kernel_size);
% We store in matrix the obtained strings and convert them to numbers.
kernel_information = str2double(user_gathered_kernel_information(:)');
image_rows = image_information(1);
image_columns = image_information(2);

% Now we use MATLAB to do a spatial filtering.
filtered_image = medfilt2(image_data, [4 4]);

% Display the results side by side.
imshowpair(image_data, filtered_image, 'montage');